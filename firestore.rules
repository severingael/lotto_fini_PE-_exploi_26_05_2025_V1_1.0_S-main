rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'adminuser';
    }

    function isAgent() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'agentuser';
    }

    function isManager() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manageruser';
    }

    // Configuration des cotes
    match /odds_config/{document} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Bets collection
    match /bets/{betId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin();
      allow delete: if false;
    }

    // Agent wallets collection
    match /agent_wallets/{walletId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isAdmin();
      allow update: if isAdmin() || (isAgent() && resource.data.userId == request.auth.uid);
      allow delete: if false;
    }

    // Agent commission wallets collection
    match /agent_commission_wallets/{walletId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isAdmin();
      allow update: if isAdmin() || (isAgent() && resource.data.userId == request.auth.uid);
      allow delete: if false;
    }

    // Agent transactions collection
    match /agent_transactions/{transactionId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isAgent() || isAdmin();
      allow update: if isAdmin();
      allow delete: if false;
    }

    // Wallet credit history collection
    match /wallet_credit_history/{historyId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
      allow delete: if false;
    }

    // Lotto participations collection
    match /lotto_participations/{participationId} {
      allow read: if isAuthenticated() && (isAdmin() || isManager() || isAgent());
      allow create: if isAgent();
      allow update: if isAdmin() || isAgent();
      allow delete: if false;
    }

    // Keep existing rules for other collections
    match /bets/{betId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if false;
      allow delete: if false;
    }

    // Helper functions
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
  }
}